{{- if .Values.query.install }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.jaeger.serviceName }}-query-configuration
  labels:
    name: {{ .Values.jaeger.serviceName }}-query-configuration
    app.kubernetes.io/name: {{ .Values.jaeger.serviceName }}-query-configuration
    app.kubernetes.io/instance: {{ cat .Values.jaeger.serviceName "-query-configuration-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
    app.kubernetes.io/component: query
    {{- include "jaeger.commonLabels" . | nindent 4 }}
    {{- if .Values.query.labels }}
      {{- toYaml .Values.query.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.query.annotations }}
  annotations:
    {{- toYaml .Values.query.annotations | nindent 4 }}
  {{- end }}
data:
  config.yaml: |
    service:
      extensions: [jaeger_storage,jaeger_query,healthcheckv2]
      pipelines:
        traces:
          receivers: [jaeger]
          processors: [batch]
          exporters: [debug]
    extensions:
      healthcheckv2:
        use_v2: true
        http:
          endpoint: "0.0.0.0:13133"
      jaeger_query:
        storage:
          traces: {{ if eq .Values.jaeger.storage.type "cassandra" }}main_cassandra{{- else if eq .Values.jaeger.storage.type "elasticsearch" }}main_elasticsearch{{- else if eq .Values.jaeger.storage.type "remotegRPC"}}remote_grpc{{- end }}
        {{- if or .Values.query.ui.config .Values.query.ui.assetsPath .Values.query.ui.logStaticAssetsAccess }}
        ui:
        {{- if .Values.query.ui.config }}
          config_file: /etc/config/query-ui-config.json
        {{- end }}
        {{- if .Values.query.ui.logStaticAssetsAccess }}
          log_access: true
        {{- end }}
        {{- if .Values.query.ui.assetsPath }}
          assets_path: {{ .Values.query.ui.assetsPath }}
        {{- end }}
        {{- end }}
        {{- if .Values.query.MaxClockSkewAdjustment }}
        max_clock_skew_adjust: {{ .Values.query.MaxClockSkewAdjustment }}
        {{- end }}
        {{- if .Values.query.bearerTokenPropagation }}
        bearer_token_propagation: true
        {{- end }}
        grpc:
          endpoint: "0.0.0.0:16685"
        http:
          endpoint: "0.0.0.0:16686"
          {{- if .Values.query.additionalHeaders }}
          headers:
          {{ toYaml .Values.query.additionalHeaders | nindent 12 }}
          {{- end }}
        {{- if .Values.query.basepath }}
        base_path: {{ .Values.query.basepath }}
        {{- end }}

      jaeger_storage:
        backends:
          {{- if eq .Values.jaeger.storage.type "cassandra" }}
          main_cassandra:
            cassandra:
              schema:
                create: {{ .Values.cassandraSchemaJob.createKeyspace | default "true" }}
                keyspace: {{ .Values.cassandraSchemaJob.keyspace | quote }}
              connection:
                local_dc: {{ include "cassandraSchemaJob.datacenter" . }}
                servers:
                  {{- if .Values.cassandraSchemaJob.host }}
                  - {{ .Values.cassandraSchemaJob.host -}}
                  {{- else }}
                  {{- if .Values.INFRA_CASSANDRA_HOST -}}
                  - {{ .Values.INFRA_CASSANDRA_HOST -}}
                  {{- else -}}
                  - cassandra.cassandra.svc
                  {{- end -}}
                  {{- end }}
                port: {{- if .Values.cassandraSchemaJob.port}}{{.Values.cassandraSchemaJob.port}}{{- else }}{{- if .Values.INFRA_CASSANDRA_PORT }}{{ .Values.INFRA_CASSANDRA_PORT }}{{- else}} 9042{{- end }}{{- end }}
                tls:
                  {{- if .Values.cassandraSchemaJob.tls.enabled }}
                  {{- if .Values.cassandraSchemaJob.tls.insecureSkipVerify }}
                  insecure_skip_verify: true
                  {{- end }}
                  ca_file: /cassandra-tls/ca-cert.pem
                  cert_file: /cassandra-tls/client-cert.pem
                  key_file: /cassandra-tls/client-key.pem
                  {{- else }}
                  insecure: true
                  {{- end }}
                auth:
                  basic:
                    username: "${env:CASSANDRA_USERNAME}"
                    password: "${env:CASSANDRA_PASSWORD}"
                    allowed_authenticators:
                    {{- toYaml .Values.cassandraSchemaJob.allowedAuthenticators | nindent 22 }}
          {{- else if eq .Values.jaeger.storage.type "elasticsearch" }}
          main_elasticsearch:
            elasticsearch:
              server_urls:
                {{ if and .Values.elasticsearch.client.url .Values.elasticsearch.client.scheme }}
                  {{- printf "- %s://%s" ( .Values.elasticsearch.client.scheme ) ( .Values.elasticsearch.client.url ) -}}
                {{- else }}
                  {{- if .Values.INFRA_OPENSEARCH_URL -}}
                  {{- printf "%s" .Values.INFRA_OPENSEARCH_URL -}}
                  {{- else -}}
                  {{- print "" -}}
                  {{- end -}}
                {{- end }}
              auth:
                basic:
                  username: "${env:ES_USERNAME}"
                  password: "${env:ES_PASSWORD}"
              {{- if .Values.elasticsearch.indexPrefix }}
              indices:
                index_prefix: {{ .Values.elasticsearch.indexPrefix | quote }}
              {{- end }}
              tls:
                {{- if .Values.elasticsearch.client.tls.enabled }}
                {{- if .Values.elasticsearch.client.tls.insecureSkipVerify }}
                insecure_skip_verify: true
                {{- else }}
                ca_file: /es-tls/ca-cert.pem
                cert_file: /es-tls/client-cert.pem
                key_file: /es-tls/client-key.pem
                {{- end }}
                {{- else }}
                insecure: true
                {{- end }}
          {{- else if eq .Values.jaeger.storage.type "remotegRPC" }}
          remote_grpc:
            grpc:
              endpoint: {{- .Values.remotegRPC.url }}
              timeout: {{- .Values.remotegRPC.timeout }}
              {{- if .Values.remotegRPC.tls.enabled }}
              tls:
                {{- if .Values.remotegRPC.tls.insecureSkipVerify }}
                insecure_skip_verify: true
                {{- else }}
                ca_file: /grpc-tls/ca-cert.pem
                cert_file: /grpc-tls/client-cert.pem
                key_file: /grpc-tls/client-key.pem
                {{- end }}
              {{- end }}
          {{- end }}
    receivers:
      jaeger:
        protocols:
          thrift_binary:
          thrift_compact:
          thrift_http:
    processors:
      batch:
    exporters:
      debug:
{{- end }}
