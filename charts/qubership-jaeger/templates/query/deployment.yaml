{{- if .Values.query.install }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.jaeger.serviceName }}-query
  labels:
    name: {{ .Values.jaeger.serviceName }}-query
    app.kubernetes.io/name: {{ .Values.jaeger.serviceName }}-query
    app.kubernetes.io/instance: {{ cat .Values.jaeger.serviceName "-query-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
    app.kubernetes.io/component: query
    {{- include "jaeger.commonLabels" . | nindent 4 }}
    {{- if .Values.query.labels }}
      {{- toYaml .Values.query.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.query.annotations }}
  annotations:
    {{- toYaml .Values.query.annotations | nindent 4 }}
  {{- end }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.query.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.jaeger.serviceName }}-query
      app.kubernetes.io/component: query
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: {{ .Values.jaeger.serviceName }}-query
        app.kubernetes.io/name: {{ .Values.jaeger.serviceName }}-query
        app.kubernetes.io/instance: {{ cat .Values.jaeger.serviceName "-query-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
        app.kubernetes.io/component: query
        {{- include "jaeger.commonLabels" . | nindent 8 }}
        app.kubernetes.io/managed-by: Helm
        {{- if .Values.query.labels }}
        {{- toYaml .Values.query.labels | nindent 8 }}
        {{- end }}
      {{- if .Values.query.annotations }}
      annotations:
        {{- toYaml .Values.query.annotations | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.query.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.query.priorityClassName }}
      priorityClassName: {{ .Values.query.priorityClassName }}
      {{- end }}
      serviceAccountName: {{ .Values.jaeger.serviceName }}-query
      containers:
        - name: query
          image: {{ template "query.image" . }}
          imagePullPolicy: {{ .Values.query.imagePullPolicy }}
          args:
            - '--config=/conf/config.yaml'
            {{- if .Values.query.cmdlineParams }}
              {{- toYaml .Values.query.cmdlineParams | nindent 12 }}
            {{- end }}
          env:
            - name: OTEL_TRACES_SAMPLER
              value: always_off
          {{- /* Section with Cassandra environment variables */}}
          {{- if eq .Values.jaeger.storage.type "cassandra" }}
            - name: CASSANDRA_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "cassandraSchemaJob.secretName" . }}
                  key: username
            - name: CASSANDRA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "cassandraSchemaJob.secretName" . }}
                  key: password
          {{- /* Section with ElasticSearch/OpenSearch environment variables */}}
          {{- else if eq .Values.jaeger.storage.type "elasticsearch" }}
            - name: ES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.existingSecret | default "jaeger-elasticsearch" }}
                  key: username
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.existingSecret | default "jaeger-elasticsearch" }}
                  key: password
            {{- range $key, $value := .Values.elasticsearch.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.readinessProbe.install }}
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 10 }}
            successThreshold: 1
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 5 }}
          {{- else }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          {{- end }}
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /status
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - containerPort: 8888
              name: metrics
              protocol: TCP
            - containerPort: 13133
              name: healthcheck
              protocol: TCP
            - containerPort: 16685
              name: query-grpc
              protocol: TCP
            - containerPort: 16686
              name: query-http
              protocol: TCP
          resources:
            {{- toYaml .Values.query.resources | nindent 12 }}
          securityContext:
            {{- include "query.containerSecurityContext" . }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: ui-config
              mountPath: /etc/config
              readOnly: true
            - name: query-config
              mountPath: /conf
              readOnly: true
            {{- include "jaeger.certificateVolumeMounts" . | nindent 12 }}
        {{- if .Values.proxy.install }}
        - name: proxy
          image: {{ include "proxy.image" . }}
          imagePullPolicy: IfNotPresent
          args:
            - '--config-path /envoy/config.yaml'
            - '--service-cluster envoy'
            - '--service-node envoy'
          ports:
            - containerPort: 9901
              protocol: TCP
            - containerPort: 16688
              protocol: TCP
          env:
            - name: ENVOY_UID
              value: '0'
            - name: ENVOY_GID
              value: '0'
          resources:
            {{- toYaml .Values.proxy.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /ready
              port: 9901
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 15
          readinessProbe:
            httpGet:
              path: /ready
              port: 9901
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 60
          volumeMounts:
            - name: envoy-config
              mountPath: /envoy
              readOnly: true
            {{- if eq .Values.proxy.type "oauth2" }}
            - name: oauth2-token
              mountPath: /envoy/oauth2
              readOnly: true
            {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            {{- include "proxy.containerSecurityContext" . }}
        {{- end }}
        {{- if .Values.readinessProbe.install }}
        - name: probe
          image: {{ template "readiness-probe.image" . }}
          imagePullPolicy: {{ .Values.readinessProbe.imagePullPolicy }}
          command: [ "/app/probe" ]
          args:
            {{- include "readinessProbe.args" . }}
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 10 }}
            successThreshold: 1
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 5 }}
          resources:
            {{- toYaml .Values.readinessProbe.resources | nindent 12 }}
          securityContext:
            {{- include "readinessProbe.containerSecurityContext" . }}
          volumeMounts:
            {{- include "jaeger.certificateVolumeMounts" . | nindent 12 }}
        {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        {{- include "query.securityContext" . }}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: ui-config
          configMap:
            name: {{ .Values.jaeger.serviceName }}-ui-configuration
            defaultMode: 420
        - name: query-config
          configMap:
            name: {{ .Values.jaeger.serviceName }}-query-configuration
            items:
              - key: config.yaml
                path: config.yaml
            defaultMode: 420
        {{- if .Values.proxy.install }}
        - name: envoy-config
          secret:
            secretName: proxy-config
            defaultMode: 420
          {{- if eq .Values.proxy.type "oauth2" }}
        - name: oauth2-token
          secret:
            secretName: oauth2-token
            defaultMode: 420
          {{- end }}
        {{- end }}
        {{- include "jaeger.certificateVolumes" . | nindent 8 }}
      {{- if .Values.query.affinity }}
      affinity:
        {{- toYaml .Values.query.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.query.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.query.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.query.tolerations }}
      tolerations:
        {{- toYaml .Values.query.tolerations | nindent 8 }}
      {{- end }}
{{- end }}
