{{- if eq .Values.jaeger.storage.type "cassandra" }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.jaeger.serviceName }}-cassandra-schema
  labels:
    job-name: {{ .Values.jaeger.serviceName }}-cassandra-schema
    name: {{ .Values.jaeger.serviceName }}-cassandra-schema
    app.kubernetes.io/name: {{ .Values.jaeger.serviceName }}-cassandra-schema
    app.kubernetes.io/instance: {{ cat .Values.jaeger.serviceName "-cassandra-schema-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
    app.kubernetes.io/component: jaeger
    {{- include "jaeger.commonLabels" . | nindent 4 }}
    {{- if .Values.cassandraSchemaJob.labels }}
      {{- toYaml .Values.cassandraSchemaJob.labels | nindent 4 }}
    {{- end }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    {{- if .Values.cassandraSchemaJob.annotations }}
      {{- toYaml .Values.cassandraSchemaJob.annotations | nindent 4 }}
    {{- end }}
spec:
  activeDeadlineSeconds: 320
  backoffLimit: 6
  completions: 1
  parallelism: 1
  {{- if semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion }}
  ttlSecondsAfterFinished: {{ .Values.cassandraSchemaJob.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        job-name: {{ .Values.jaeger.serviceName }}-cassandra-schema
        name: {{ .Values.jaeger.serviceName }}-cassandra-schema
        app.kubernetes.io/name: {{ .Values.jaeger.serviceName }}-cassandra-schema
        app.kubernetes.io/instance: {{ cat .Values.jaeger.serviceName "-cassandra-schema-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
        app.kubernetes.io/component: jaeger
        {{- include "jaeger.commonLabels" . | nindent 8 }}
        app.kubernetes.io/managed-by: Helm
        {{- if .Values.cassandraSchemaJob.labels }}
          {{- toYaml .Values.cassandraSchemaJob.labels | nindent 8 }}
        {{- end }}
      {{- if .Values.cassandraSchemaJob.annotations }}
      annotations:
        {{- toYaml .Values.cassandraSchemaJob.annotations | nindent 8 }}
      {{- end }}
    spec:
      activeDeadlineSeconds: 320
      {{- with .Values.cassandraSchemaJob.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.cassandraSchemaJob.priorityClassName }}
      priorityClassName: {{ .Values.cassandraSchemaJob.priorityClassName }}
      {{- end }}
      containers:
      - name: {{ .Values.cassandraSchemaJob.name }}
        image: {{ template "cassandra-schema-job.image" . }}
        imagePullPolicy: {{ .Values.cassandraSchemaJob.imagePullPolicy }}
        env:
        {{- if .Values.cassandraSchemaJob.extraEnv }}
          {{- toYaml .Values.cassandraSchemaJob.extraEnv | nindent 8 }}
        {{- end }}
        - name: CQLSH_HOST
          value: {{ include "cassandraSchemaJob.host" . }}
        - name: CQLSH_PORT
          value: {{ include "cassandraSchemaJob.port" . | quote }}
        {{- if .Values.cassandraSchemaJob.tls.enabled }}
        - name: CQLSH_SSL
          value: "--ssl --cqlshrc /cassandra-tls/cqlshrc"
        {{- end }}
        - name: MODE
          value: {{ .Values.cassandraSchemaJob.mode }}
        - name: DATACENTER
          value: {{ include "cassandraSchemaJob.datacenter" . }}
        - name: KEYSPACE
          value: {{ .Values.cassandraSchemaJob.keyspace }}
        - name: CASSANDRA_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ template "cassandraSchemaJob.secretName" (merge (dict "prehook" true) .) }}
              key: username
        - name: CASSANDRA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "cassandraSchemaJob.secretName" (merge (dict "prehook" true) .) }}
              key: password
        {{- if .Values.cassandraSchemaJob.ttl }}
          {{- if .Values.cassandraSchemaJob.ttl.trace }}
        - name: TRACE_TTL
          value: {{ .Values.cassandraSchemaJob.ttl.trace | int | quote }}
          {{- end }}
          {{- if .Values.cassandraSchemaJob.ttl.dependencies }}
        - name: DEPENDENCIES_TTL
          value: {{ .Values.cassandraSchemaJob.ttl.dependencies | int | quote }}
          {{- end }}
        {{- end }}
        resources:
          {{- toYaml .Values.cassandraSchemaJob.resources | nindent 10 }}
        securityContext:
          {{- include "cassandraSchemaJob.containerSecurityContext" . }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        {{- if .Values.cassandraSchemaJob.tls.enabled }}
        volumeMounts:
          - name: {{ template "cassandraSchemaJob.tls.secretName" (merge (dict "prehook" true) .) }}
            mountPath: "/cassandra-tls/ca-cert.pem"
            subPath: "ca-cert.pem"
            readOnly: true
          - name: {{ template "cassandraSchemaJob.tls.secretName" (merge (dict "prehook" true) .) }}
            mountPath: "/cassandra-tls/client-cert.pem"
            subPath: "client-cert.pem"
            readOnly: true
          - name: {{ template "cassandraSchemaJob.tls.secretName" (merge (dict "prehook" true) .) }}
            mountPath: "/cassandra-tls/client-key.pem"
            subPath: "client-key.pem"
            readOnly: true
          - name: {{ template "cassandraSchemaJob.tls.secretName" (merge (dict "prehook" true) .) }}
            mountPath: "/cassandra-tls/cqlshrc"
            subPath: "cqlshrc"
            readOnly: true
        {{- end }}
      securityContext:
        {{- include "cassandraSchemaJob.securityContext" . }}
      {{- if .Values.cassandraSchemaJob.affinity }}
      affinity:
        {{- toYaml .Values.cassandraSchemaJob.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.cassandraSchemaJob.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.cassandraSchemaJob.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.cassandraSchemaJob.tolerations }}
      tolerations:
        {{- toYaml .Values.cassandraSchemaJob.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.cassandraSchemaJob.tls.enabled }}
      volumes:
        - name: {{ template "cassandraSchemaJob.tls.secretName" (merge (dict "prehook" true) .) }}
          secret:
            secretName: {{ template "cassandraSchemaJob.tls.secretName" (merge (dict "prehook" true) .) }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
{{- end }}
