{{- if .Values.integrationTests.install }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.integrationTests.service.name }}
  labels:
    name: {{ .Values.integrationTests.service.name }}
    app.kubernetes.io/name: {{ .Values.integrationTests.service.name }}
    app.kubernetes.io/instance: {{ cat .Values.integrationTests.service.name "-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
    app.kubernetes.io/component: jaeger-integration-tests
    app.kubernetes.io/part-of: jaeger
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
spec:
  selector:
    matchLabels:
      name: {{ .Values.integrationTests.service.name }}
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        name: {{ .Values.integrationTests.service.name }}
        app.kubernetes.io/name: {{ .Values.integrationTests.service.name }}
        app.kubernetes.io/instance: {{ cat .Values.integrationTests.service.name "-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
        app.kubernetes.io/component: jaeger-integration-tests
        app.kubernetes.io/part-of: jaeger
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {{- include "integrationTests.securityContext" . }}
      serviceAccountName: {{ .Values.integrationTests.serviceAccount.name }}
      {{- if .Values.integrationTests.affinity }}
      affinity:
        {{- toYaml .Values.integrationTests.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.integrationTests.priorityClassName }}
      priorityClassName: {{ .Values.integrationTests.priorityClassName }}
      {{- end }}
      containers:
        - name: {{ .Values.integrationTests.service.name }}
          image: {{ template "jaeger-integration-tests.image" . }}
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: TAGS
              value: {{ .Values.integrationTests.tags }}
            - name: JAEGER_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JAEGER_SERVICE_NAME
              value: {{ .Values.jaeger.serviceName }}
            - name: LINK_FOR_GENERATOR
              value: {{ .Values.integrationTests.linkForGenerator }}
            - name: GENERATE_COUNT
              value: {{ .Values.integrationTests.generateCount | quote}}
            - name: WAITING_TIME
              value: {{ .Values.integrationTests.waitingTime }}
            - name: STATUS_WRITING_ENABLED
              value: {{ .Values.integrationTests.statusWriting.enabled | quote }}
            - name: ONLY_INTEGRATION_TESTS
              value: {{ .Values.integrationTests.statusWriting.onlyIntegrationTests | quote }}
            - name: IS_SHORT_STATUS_MESSAGE
              value: {{ .Values.integrationTests.statusWriting.isShortStatusMessage | quote }}
            - name: STATUS_CUSTOM_RESOURCE_PATH
              value: {{ toYaml .Values.integrationTests.statusWriting.customResourcePath }}
          resources: {{ toYaml .Values.integrationTests.resources | nindent 12 }}
          securityContext:
            {{- include "integrationTests.containerSecurityContext" . }}
          volumeMounts:
            - name: output
              mountPath: /opt/robot/output
          terminationMessagePath: /dev/termination-log
          imagePullPolicy: Always
      volumes:
        - name: output
          emptyDir: {}
{{- end }}
